# User Guide for Running the Interpreter

This interpreter supports two modes of operation: interactive mode and program mode.

## Interactive Mode

To run the interpreter in interactive mode:

1. Open a terminal or command prompt.
2. Navigate to the directory containing the interpreter files.
3. Run the following command:


   python shell.py


4. You will see a prompt: calc>
5. Enter your expressions or statements one at a time. Press Enter after each input.
6. To exit the interactive mode, type exit and press Enter.

Example session:


Interactive mode. Type 'exit' to quit. Type 'debug' to enter debug mode.
calc> 2 + 3
Result: 5

calc> function add(x, y) => x + y
Result: Function 'add' defined

calc> add(5, 7)
Result: 12

calc> exit


### Debug Mode

While in interactive mode, you can enter debug mode to see the tokens and Abstract Syntax Tree (AST) for a given input:

1. Type debug at the calc> prompt and press Enter.
2. You will see a new prompt: debug>
3. Enter the expression or statement you want to debug.
4. The interpreter will display the tokens and AST before executing the input.

Example:


calc> debug
debug> 2 + 3
Tokens:
Token(TokenType.INTEGER, 2)
Token(TokenType.PLUS, '+')
Token(TokenType.INTEGER, 3)
Token(TokenType.EOF, None)

Abstract Syntax Tree:
BinOp:
  Left:
    Num: 2
  Op: PLUS
  Right:
    Num: 3

Result: 5


## Program Mode

To run the interpreter in program mode:

1. Create a text file containing your program. Each statement should be on a new line or separated by semicolons.
2. Open a terminal or command prompt.
3. Navigate to the directory containing the interpreter files and your program file.
4. Run the following command:


   python shell.py your_program_file.txt


   Replace your_program_file.txt with the actual name of your program file.

5. The interpreter will execute each statement in the file and display the results.

Example program file (program.txt):


function fibonacci(n) =>
  if n <= 1 then
    n
  else
    fibonacci(n - 1) + fibonacci(n - 2);

fibonacci(10)


Running the program:


$ python shell.py program.txt
Executing: function fibonacci(n) =>
  if n <= 1 then
    n
  else
    fibonacci(n - 1) + fibonacci(n - 2)
Result: Function 'fibonacci' defined

Executing: fibonacci(10)
Result: 55


Note: Make sure all required files (shell.py, lexer.py, parser.py, and interpreter.py)
are in the same directory when running the interpreter.