function factorial(n) => if n <= 1 then 1 else n * factorial(n - 1);
factorial(5);
function fibonacci(n) => if n <= 1 then n else fibonacci(n - 1) + fibonacci(n - 2);
fibonacci(7);
function add(x, y) => x + y;
add(3, 4);
(lambda x => x * x)(2);
(5 + 3) * 2 - 10 / 2;
5 > 3 && 10 <= 10 || !(2 == 3);
if 10 > 5 then 10 else 5;
let x => 5 in x * 2;
function gcd(a, b) => if b == 0 then a else gcd(b, a % b);
gcd(48, 18);
function sumToN(n) =>
    if n > 0 then
        n + sumToN(n - 1)
    else
        0;
sumToN(10);
function ackermann(m, n) =>
    if m == 0 then
        n + 1
    else if n == 0 then
        ackermann(m - 1, 1)
    else
        ackermann(m - 1, ackermann(m,n-1));
ackermann(3, 2);
let x => 10 in
let y => 20 in
let z => 30 in
x+y+z;
function isEven(n) => if n == 0 then true else isOdd(n - 1);
function isOdd(n) => if n == 0 then false else isEven(n - 1);
isEven(4);
isOdd(7);